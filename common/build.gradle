plugins {
    alias libs.plugins.quilt.loom
}

base.archivesName = "${mod_name}-common-${libs.versions.minecraft.get()}"

repositories {
    maven {
        name 'Quilt (Release)'
        url 'https://maven.quiltmc.org/repository/release/'
    }

    maven {
        name 'Quilt (Snapshot)'
        url 'https://maven.quiltmc.org/repository/snapshot/'
        content {
            includeGroup 'org.quiltmc.fabric_api_qsl'
            includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
        }
    }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.officialMojangMappings()

    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly libs.quilt.loader

    compileOnly libs.mixin
}

loom {
    splitEnvironmentSourceSets()

    if(file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(file("src/main/resources/${mod_id}.accesswidener"))
    }

    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }

    runConfigs.configureEach {
        ideConfigGenerated = false
    }
}

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId base.archivesName.get()
            version project.version
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}